@page
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<head>
	<title>Project 3</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body onload="listGroups()">
	<form name="combowithtext">

		<div class="jumbotron text-center">
			<div class="container">
				<div class="col-sm-4">
					<p>
						<label for="Group">Groups:</label>

						<select id="mydropdown" onChange="showtext()">
						</select>
					</p>

				</div>
				<div class="col-sm-4">
					<p>Add new item <button type="button" id="newItemButton">+</button></p>
					<p>Add new group <button type="button" id="newGroupButton">+</button></p>


				</div>
			</div>
		</div>
		<center>
			<div class="container">
				<textarea rows=8 cols=21 wrap="virtual" name="text00" onChange="updateText()"></textarea>
				<textarea rows=8 cols=21 wrap="virtual" name="text01" onChange="updateText()"></textarea>
				<textarea rows=8 cols=21 wrap="virtual" name="text02" onChange="updateText()"></textarea>
			</div>
			<div class="container">
				<textarea rows=8 cols=21 wrap="virtual" name="text10" onChange="updateText()"></textarea>
				<textarea rows=8 cols=21 wrap="virtual" name="text11" onChange="updateText()"></textarea>
				<textarea rows=8 cols=21 wrap="virtual" name="text12" onChange="updateText()"></textarea>
			</div>
		</center>
	</form>
	<p id="demo"></p>
	<script>
		//http://www.javascriptkit.com/script/script2/combodescrip1.shtml used to help give us an idea of the boxes for
		//the combobox to populating items.
		var title = ["Group1", "Group2", "Group3"]; // Possible Values
		var shortcut = document.combowithtext;
		var descriptions = [];
		var currentGroupItems = [];
		var currentGroupItemDescNum = [];


		function listGroups() {
			var sel = document.getElementById('mydropdown') // find the drop down
			for (var i in title) { // loop through all elements
				var opt = document.createElement("option"); // Create the new element
				opt.value = title[i]; // set the value
				opt.text = title[i]; // set the text
				sel.appendChild(opt); // add it to the select
			}
		}

		//function addGroup() {
		//	var sel = document.getElementById('mydropdown') // find the drop down
		//	var length = sel.options.length;
		//	for (i = length - 1; i >= 0; i--) {
		//		sel.options[i] = null;
		//	}

		//	var i = title.length + 1;
		//	title[title.length] = "Group" + i;
		//	listGroups();
		//}


		function addItem() {
			var grpForItem = title[shortcut.mydropdown.selectedIndex];

			var i = descriptions.length + 1;
			descriptions[descriptions.length] = grpForItem + ", Item " + i + " description...";

			showtext();
		}

		function showtext() {
			//var currentGroupItems = [];
			var grpForItem = title[shortcut.mydropdown.selectedIndex];

			var i;
			var j = 0;
			for (i = 0; i < descriptions.length; i++) {
				var str = descriptions[i];
				var n = str.indexOf(",");
				var grpNum = str.substr(0, n);
				var rest = str.substr(n + 1);
				if (grpNum == grpForItem) {
					currentGroupItems[j] = rest;
					currentGroupItemDescNum[j] = i;
					j++;
				}

			}
			for (j + 1; j < descriptions.length; j++) {
				currentGroupItems[j] = null;
				currentGroupItemDescNum[j] = null;
			}

			shortcut.text00.value = currentGroupItems[0];
			shortcut.text01.value = currentGroupItems[1];
			shortcut.text02.value = currentGroupItems[2];
			shortcut.text10.value = currentGroupItems[3];
			shortcut.text11.value = currentGroupItems[4];
			shortcut.text12.value = currentGroupItems[5];
		}

		function updateText() {
			var grpForItem = title[shortcut.mydropdown.selectedIndex];

			if (shortcut.text00.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[0]] = grpForItem + ", " + shortcut.text00.value;
			}
			else {
				shortcut.text00.value = "Error. No item here to edit.";
			}
			if (shortcut.text01.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[1]] = grpForItem + ", " + shortcut.text01.value;
			}
			else {
				shortcut.text01.value = "Error. No item here to edit.";
			}
			if (shortcut.text02.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[2]] = grpForItem + ", " + shortcut.text02.value;
			}
			else {
				shortcut.text02.value = "Error. No item here to edit.";
			}
			if (shortcut.text10.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[3]] = grpForItem + ", " + shortcut.text10.value;
			}
			else {
				shortcut.text10.value = "Error. No item here to edit.";
			}
			if (shortcut.text11.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[4]] = grpForItem + ", " + shortcut.text11.value;
			}
			else {
				shortcut.text11.value = "Error. No item here to edit.";
			}
			if (shortcut.text12.value != "null" || "undefined") {
				descriptions[currentGroupItemDescNum[5]] = grpForItem + ", " + shortcut.text12.value;
			}
			else {
				shortcut.text12.value = "Error. No item here to edit.";
			}

		}


	</script>


</body>
</html>